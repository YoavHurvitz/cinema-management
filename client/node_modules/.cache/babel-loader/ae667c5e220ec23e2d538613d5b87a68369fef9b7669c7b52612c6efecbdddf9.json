{"ast":null,"code":"// src/redux/subscriptionsSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../services/api';\nexport const fetchSubscriptions = createAsyncThunk('subscriptions/fetchSubscriptions', async () => {\n  const response = await api.get('/subscriptions');\n  return response.data;\n});\nconst subscriptionsSlice = createSlice({\n  name: 'subscriptions',\n  initialState: [],\n  reducers: {\n    setSubscriptions: (state, action) => {\n      return action.payload;\n    },\n    addSubscription: (state, action) => {\n      state.push(action.payload);\n    },\n    removeSubscription: (state, action) => {\n      return state.filter(sub => sub.memberId !== action.payload.memberId || sub.movieId !== action.payload.movieId || sub.date !== action.payload.date);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchSubscriptions.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n});\nexport const {\n  setSubscriptions,\n  addSubscription\n} = subscriptionsSlice.actions;\nexport default subscriptionsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchSubscriptions","response","get","data","subscriptionsSlice","name","initialState","reducers","setSubscriptions","state","action","payload","addSubscription","push","removeSubscription","filter","sub","memberId","movieId","date","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["C:/Users/LENOVO/Desktop/Final Project Full Stack/client/src/redux/subscriptionsSlice.js"],"sourcesContent":["// src/redux/subscriptionsSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from '../services/api';\r\n\r\nexport const fetchSubscriptions = createAsyncThunk(\r\n  'subscriptions/fetchSubscriptions',\r\n  async () => {\r\n    const response = await api.get('/subscriptions');\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst subscriptionsSlice = createSlice({\r\n  name: 'subscriptions',\r\n  initialState: [],\r\n  reducers: {\r\n    setSubscriptions: (state, action) => {\r\n      return action.payload;\r\n    },\r\n    addSubscription: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n   removeSubscription: (state, action) => {\r\n       return state.filter(sub => \r\n         sub.memberId !== action.payload.memberId || \r\n         sub.movieId !== action.payload.movieId || \r\n       sub.date !== action.payload.date\r\n       );\r\n     },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchSubscriptions.fulfilled, (state, action) => {\r\n      return action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { setSubscriptions, addSubscription } = subscriptionsSlice.actions;\r\nexport default subscriptionsSlice.reducer;"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,OAAO,MAAMC,kBAAkB,GAAGF,gBAAgB,CAChD,kCAAkC,EAClC,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,gBAAgB,CAAC;EAChD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,MAAMC,kBAAkB,GAAGP,WAAW,CAAC;EACrCQ,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,gBAAgB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnC,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC;IACDC,eAAe,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACI,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC5B,CAAC;IACFG,kBAAkB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACnC,OAAOD,KAAK,CAACM,MAAM,CAACC,GAAG,IACrBA,GAAG,CAACC,QAAQ,KAAKP,MAAM,CAACC,OAAO,CAACM,QAAQ,IACxCD,GAAG,CAACE,OAAO,KAAKR,MAAM,CAACC,OAAO,CAACO,OAAO,IACxCF,GAAG,CAACG,IAAI,KAAKT,MAAM,CAACC,OAAO,CAACQ,IAC5B,CAAC;IACH;EACH,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACtB,kBAAkB,CAACuB,SAAS,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC/D,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,gBAAgB;EAAEI;AAAgB,CAAC,GAAGR,kBAAkB,CAACoB,OAAO;AAC/E,eAAepB,kBAAkB,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
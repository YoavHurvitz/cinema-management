{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Final Project Full Stack\\\\client\\\\src\\\\components\\\\Profile.jsx\";\n// src/components/Profile.jsx\nimport React from 'react';\nimport { Container, Paper, Typography, Box, Avatar, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  // This is mock data. In a real application, you'd fetch this from your backend or state management.\n  const user = {\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n    role: 'Admin',\n    joinDate: '2023-01-01'\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 3,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            width: 100,\n            height: 100,\n            mr: 3\n          },\n          children: user.name.charAt(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"textSecondary\",\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"User Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }, this), \" \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Join Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 23\n          }, this), \" \", new Date(user.joinDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","Container","Paper","Typography","Box","Avatar","Divider","jsxDEV","_jsxDEV","Profile","user","name","email","role","joinDate","maxWidth","sx","mt","children","elevation","p","display","alignItems","mb","width","height","mr","charAt","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","my","gutterBottom","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Final Project Full Stack/client/src/components/Profile.jsx"],"sourcesContent":["// src/components/Profile.jsx\r\nimport React from 'react';\r\nimport { Container, Paper, Typography, Box, Avatar, Divider } from '@mui/material';\r\n\r\nfunction Profile() {\r\n  // This is mock data. In a real application, you'd fetch this from your backend or state management.\r\n  const user = {\r\n    name: 'John Doe',\r\n    email: 'john.doe@example.com',\r\n    role: 'Admin',\r\n    joinDate: '2023-01-01',\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n          <Avatar sx={{ width: 100, height: 100, mr: 3 }}>\r\n            {user.name.charAt(0)}\r\n          </Avatar>\r\n          <Box>\r\n            <Typography variant=\"h4\">{user.name}</Typography>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n              {user.role}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider sx={{ my: 3 }} />\r\n        <Box>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            User Details\r\n          </Typography>\r\n          <Typography><strong>Email:</strong> {user.email}</Typography>\r\n          <Typography><strong>Join Date:</strong> {new Date(user.joinDate).toLocaleDateString()}</Typography>\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}